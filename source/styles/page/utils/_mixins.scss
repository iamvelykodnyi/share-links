@mixin pseudo-element($width, $height, $content: '') {
  display: block;
  position: absolute;
  width: $width;
  height: $height;
  content: $content;
}

@mixin element-to-center($value: 'both') {
  @if ($value == 'x') {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
  }
  @if ($value == 'y') {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
  }
  @if ($value == 'both') {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}

@mixin reset-select {
  // Delete style browser
  // -webkit-appearance: none; // for WebKit
  // -moz-appearance: none; // for FF
  text-indent: 0; // for FF
  text-overflow: ''; // for FF
  // -ms-appearance: none; // for IE
  appearance: none !important; // for IE
}

@mixin container {
  margin: 0 auto;
  padding: 0 $gutter;
  @include mq(sm) {
    max-width: map-get($mq-breakpoints, 'sm') - ($gutter * 2);
  }
  @include mq(md) {
    max-width: map-get($mq-breakpoints, 'md') - ($gutter * 2);
  }
  @include mq(lg) {
    max-width: map-get($mq-breakpoints, 'lg') - ($gutter * 2);
  }
}

@mixin container-fluid {
  padding: 0 $gutter;
}

@mixin row($gutter: $gutter) {
  display: flex;
  flex-direction: column;
  margin: 0 (-$gutter);

  @include mq(md) {
    flex-direction: row;
  }
}

@mixin column($gutter: $gutter) {
  flex: 1 0 auto;
  min-height: 1px;
  padding: 0 $gutter;
}

@mixin link-style($color: $color-primary, $color-hover: $color-accent) {
  border-bottom: 1px solid rgba($color, .4);
  color: $color;
  transition: all $duration;

  &:hover {
    border-color: rgba($color-hover, .8);
    color: $color-hover;
  }
}
